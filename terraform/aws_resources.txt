data.external.myipaddr: Reading...
random_shuffle.az: Refreshing state... [id=-]
data.external.myipaddr: Read complete after 0s [id=-]
data.aws_ami.ubuntu_linux: Reading...
data.aws_key_pair.my-key: Reading...
module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...
module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-035302a7c2cce5fa8]
module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347]
data.aws_ami.centos7_linux: Reading...
module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Reading...
module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-0005d342cd992b30f]
module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Read complete after 0s [id=2053943846]
module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]: Refreshing state... [id=vpc-flow-log-role-20220923144713809700000002]
module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch[0]: Refreshing state... [id=arn:aws:iam::995646271469:policy/vpc-flow-log-to-cloudwatch-20220923144713808100000001]
data.aws_key_pair.my-key: Read complete after 0s [id=key-0b7b9810319315d5c]
data.aws_ami.centos7_linux: Read complete after 0s [id=ami-072ec828dae86abe5]
data.aws_ami.ubuntu_linux: Read complete after 0s [id=ami-0f7559f51d3a22167]
module.vpc.aws_default_security_group.this[0]: Refreshing state... [id=sg-00177921c4b1b1ff5]
module.vpc.aws_default_route_table.default[0]: Refreshing state... [id=rtb-0845fdbd89fae0eac]
module.vpc.aws_default_network_acl.this[0]: Refreshing state... [id=acl-033522c67541bab80]
module.security_group_control_center.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-083b3d01990a9f626]
module.security_group_schema_registry.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-045d1ea0ac28d9247]
module.security_group_ksql.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-05432e29d43728cc5]
module.security_group_ldap.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-00f4211aad6aba707]
module.security_group_zookeeper.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-09008d708bf4d95f9]
module.security_group_kafka_connect.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-0c818415a935f7e2b]
module.security_group_kafka_rest.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-0b59afb0c9bdc4f19]
module.vpc.aws_cloudwatch_log_group.flow_log[0]: Refreshing state... [id=/aws/vpc-flow-log/vpc-0005d342cd992b30f]
module.security_group_kafka.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-01719a283d0afb712]
module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-06426bae0f24d2051]
module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-0da368cd17d8f3f7a]
module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-0b61c1e3969435578]
module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-0a41a250739374de2]
module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-0783933df21e066e7]
module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-075912f3f5be5850f]
module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0c98882b20c7fd406]
module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-0a33a717464ace1d1]
module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-0c529263f478b46ac]
module.security_group_ksql.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-4174608261]
module.security_group_ksql.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-666066445]
module.security_group_control_center.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-2441193045]
module.security_group_control_center.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-3806736359]
module.security_group_control_center.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-2439532092]
module.security_group_control_center.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3014404611]
module.security_group_ksql.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-2104498115]
module.security_group_ksql.aws_security_group_rule.ingress_with_cidr_blocks[2]: Refreshing state... [id=sgrule-3711502918]
module.security_group_ksql.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-441088791]
module.security_group_schema_registry.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-641784143]
module.security_group_ldap.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3171458658]
module.security_group_ldap.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-4195066961]
module.security_group_ldap.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-1753667497]
module.security_group_schema_registry.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-769582867]
module.security_group_schema_registry.aws_security_group_rule.ingress_with_cidr_blocks[2]: Refreshing state... [id=sgrule-2796833043]
module.security_group_schema_registry.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-2899684832]
module.security_group_schema_registry.aws_security_group_rule.ingress_with_cidr_blocks[3]: Refreshing state... [id=sgrule-2693646471]
module.security_group_schema_registry.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-3534118695]
module.security_group_ldap.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-1583476450]
module.security_group_ldap.aws_security_group_rule.ingress_rules[1]: Refreshing state... [id=sgrule-1650255545]
module.security_group_ldap.aws_security_group_rule.ingress_rules[2]: Refreshing state... [id=sgrule-346214237]
module.security_group_kafka_connect.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3577712021]
module.security_group_kafka_connect.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-54540292]
module.security_group_kafka_connect.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-2855978685]
module.security_group_kafka_connect.aws_security_group_rule.ingress_with_cidr_blocks[2]: Refreshing state... [id=sgrule-2417261359]
module.security_group_zookeeper.aws_security_group_rule.ingress_rules[2]: Refreshing state... [id=sgrule-3884935907]
module.security_group_zookeeper.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-1536141147]
module.security_group_zookeeper.aws_security_group_rule.ingress_rules[1]: Refreshing state... [id=sgrule-1570751859]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[5]: Refreshing state... [id=sgrule-1318155238]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-3721152786]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-1018404249]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[2]: Refreshing state... [id=sgrule-1076717759]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[3]: Refreshing state... [id=sgrule-128508077]
module.security_group_zookeeper.aws_security_group_rule.ingress_with_cidr_blocks[4]: Refreshing state... [id=sgrule-3798897366]
module.security_group_kafka_connect.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-57876434]
module.security_group_kafka_rest.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3346875972]
module.security_group_kafka_rest.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-285645753]
module.security_group_kafka_rest.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-1400946585]
module.security_group_kafka_rest.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-1854500730]
module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-0f5326b6fb5c4d5ca]
module.security_group_zookeeper.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3038522452]
module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-034e8852fa9dd7852]
module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-0f6b518feab43659e]
module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-02be129b6b3b63812]
module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-0ef592ab74f63adfe]
module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-00c7500a3d48b1cf3]
module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-0a33a717464ace1d11080289494]
module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-0dc35ee7fc044e9d5]
module.control_center.aws_instance.this[0]: Refreshing state... [id=i-099f1d4fe65372077]
module.security_group_kafka.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3764147211]
module.kafka_connect.aws_instance.this[0]: Refreshing state... [id=i-00c551f3de5f24711]
module.ksql[0].aws_instance.this[0]: Refreshing state... [id=i-0d594c02edb5ed89f]
module.kafka_rest.aws_instance.this[0]: Refreshing state... [id=i-0426c154c1449d568]
module.schema_regitry.aws_instance.this[0]: Refreshing state... [id=i-040f78c6d99f6dce0]
module.security_group_kafka.aws_security_group_rule.ingress_rules[0]: Refreshing state... [id=sgrule-3841620194]
module.security_group_kafka.aws_security_group_rule.ingress_rules[2]: Refreshing state... [id=sgrule-1098706378]
module.security_group_kafka.aws_security_group_rule.ingress_rules[3]: Refreshing state... [id=sgrule-272636478]
module.security_group_kafka.aws_security_group_rule.ingress_rules[1]: Refreshing state... [id=sgrule-2270878692]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[3]: Refreshing state... [id=sgrule-3725294353]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[4]: Refreshing state... [id=sgrule-3071030337]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[1]: Refreshing state... [id=sgrule-3347436614]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-653918413]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[5]: Refreshing state... [id=sgrule-2353320198]
module.security_group_kafka.aws_security_group_rule.ingress_with_cidr_blocks[2]: Refreshing state... [id=sgrule-2290468505]
module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0c98882b20c7fd4061080289494]
module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0]: Refreshing state... [id=vpc-flow-log-role-20220923144713809700000002-20220923144715160900000003]
module.zookeeper["zk-0"].aws_instance.this[0]: Refreshing state... [id=i-00742253e4913ddb8]
module.vpc.aws_flow_log.this[0]: Refreshing state... [id=fl-0e515a3fd675e50af]
module.kafka["kafka-0"].aws_instance.this[0]: Refreshing state... [id=i-00d365676ad0f219d]

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

  # module.control_center.aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-099f1d4fe65372077"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "control_center"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka["kafka-0"].aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-00d365676ad0f219d"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "kafka-0"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka_connect.aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-00c551f3de5f24711"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "kafka_connect"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka_rest.aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-0426c154c1449d568"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "kafka_rest"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.ksql[0].aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-0d594c02edb5ed89f"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "ksql"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.schema_regitry.aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-040f78c6d99f6dce0"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "schema_registry"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.zookeeper["zk-0"].aws_instance.this[0] has changed
  ~ resource "aws_instance" "this" {
        id                                   = "i-00742253e4913ddb8"
        tags                                 = {
            "Environment" = "staging"
            "Name"        = "zk-0"
            "Owner"       = "confluent user"
        }
      ~ tags_all                             = {
          + "owner_email" = "gnasri"
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.

─────────────────────────────────────────────────────────────────────────────

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # module.control_center.aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-099f1d4fe65372077"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka["kafka-0"].aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-00d365676ad0f219d"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka_connect.aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-00c551f3de5f24711"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.kafka_rest.aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-0426c154c1449d568"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.ksql[0].aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-0d594c02edb5ed89f"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.schema_regitry.aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-040f78c6d99f6dce0"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.zookeeper["zk-0"].aws_instance.this[0] will be updated in-place
  ~ resource "aws_instance" "this" {
        id                                   = "i-00742253e4913ddb8"
      ~ tags                                 = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
      ~ tags_all                             = {
          - "owner_email" = "gnasri" -> null
            # (3 unchanged elements hidden)
        }
        # (31 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

Plan: 0 to add, 7 to change, 0 to destroy.

Changes to Outputs:
  ~ resource-ids = <<-EOT
        all:
          vars:
            ansible_connection: ssh
            ansible_user: ubuntu
            ansible_become: true
            ansible_ssh_private_key_file: ~/.ssh/id_rsa
            validate_hosts: false
            confluent_common_repository_debian_release_version: focal
            #Enable JMX Exporter
            jmxexporter_enabled: true
            env: aws
      - ldap_server:
      -   hosts:  
      -     
      -       ansible_user: centos
      + 
        zookeeper:
          hosts:
            
            ip-10-4-11-49.eu-west-3.compute.internal:
              ansible_host: ec2-15-237-49-249.eu-west-3.compute.amazonaws.com
            
        kafka_broker:
          hosts:
            
      -     "\t"ip-10-4-11-200.eu-west-3.compute.internal:
      +     ip-10-4-11-200.eu-west-3.compute.internal:
              ansible_host: ec2-35-181-6-1.eu-west-3.compute.amazonaws.com
              kafka_broker_custom_properties:
                broker.rack: eu-west-3a
            
        schema_registry:
          hosts:
            ip-10-4-12-214.eu-west-3.compute.internal:
              ansible_host: ec2-52-47-120-50.eu-west-3.compute.amazonaws.com
        kafka_rest:
          hosts:
            ip-10-4-12-54.eu-west-3.compute.internal:
              ansible_host: ec2-15-188-79-35.eu-west-3.compute.amazonaws.com
        ksql:
          hosts:
            
            ip-10-4-11-210.eu-west-3.compute.internal:
              ansible_host: ec2-15-236-226-71.eu-west-3.compute.amazonaws.com
              
        kafka_connect:
          hosts:
            ip-10-4-12-222.eu-west-3.compute.internal:
              ansible_host: ec2-35-180-133-174.eu-west-3.compute.amazonaws.com
        control_center:
          hosts:
            ip-10-4-12-78.eu-west-3.compute.internal:
              ansible_host: ec2-15-188-89-102.eu-west-3.compute.amazonaws.com
    EOT

Warning: Argument is deprecated

  with module.vpc.aws_vpc.this,
  on .terraform/modules/vpc/main.tf line 27, in resource "aws_vpc" "this":
  27:   enable_classiclink               = var.enable_classiclink

With the retirement of EC2-Classic the enable_classiclink attribute has been deprecated and will be removed in a future version.

(and one more similar warning elsewhere)

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
